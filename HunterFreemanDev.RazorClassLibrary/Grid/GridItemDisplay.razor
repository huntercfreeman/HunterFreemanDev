@using Fluxor.Blazor.Web.Components

@inherits FluxorComponent

@if (_cachedGridTabContainer is not null &&
     _cachedHtmlElementRecord is not null)
{
    if (GridItemRecord.InitialGridTabRecord is null || _isInitialized)
    {
        <div class="hfd_grid-item-display"
             style="@_cachedHtmlElementRecord.DimensionsRecord.BuildCssStyleString()">
            <CascadingValue Value="GridItemRecord.GridItemRecordKey">
                <CascadingValue Name="@GridDisplay.ON_CHOSE_GRID_TAB_RECORD_ACTION_PARAMETER_NAME" IsFixed="true" Value="OnGridTabRecordChosenAction">
                    <CascadingValue Name="ActiveGridTabIndex" Value="_cachedGridTabContainer.ActiveGridTabIndex">
                        <CascadingValue Name="GridItemDisplayCachedHtmlElementRecord" Value="_cachedHtmlElementRecord">

                            <div class="hfd_grid-display-tabs"
                                 style="height: @_heightOfGridTabDimensionValuedUnit.BuildCssStyleString()">
                                @if (_cachedGridTabContainer.ActiveGridTabIndex is not null)
                                {
                                    <div class="hfd_grid-display-change-active-tab-section">
                                        @for (int i = 0; i < _cachedGridTabContainer.GridTabRecords.Length; i++)
                                        {
                                            var tabIndex = i;
                                            var gridTabRecord = _cachedGridTabContainer.GridTabRecords[tabIndex];

                                            <GridTabDisplay GridTabRecord="gridTabRecord"
                                                            MyGridTabIndex="tabIndex"
                                                            TotalCountOfGridTabs="_cachedGridTabContainer.GridTabRecords.Length"/>
                                        }
                                    </div>

                                    <GridTabAddButtonDisplay NextAvailableTabIndex="_cachedGridTabContainer.GridTabRecords.Length"/>
                                }
                            </div>

                            <div class="grid-body-display-wrapping"
                                 style="height: calc(100% - @_heightOfGridTabDimensionValuedUnit.BuildCssStyleString())">
                                <CascadingValue Value="GetActiveGridTabId()">
                                    <GridBodyDisplay RenderedContentType="GetActiveGridTab()?.RenderedContentType"
                                                     Parameters="GetActiveGridTab()?.Parameters" />
                                </CascadingValue>
                            </div>
                        </CascadingValue>
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
        </div>
    }
}